<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <style>
    body,
    h1,
    h2,
    p,
    ul,
    li,
    form,
    input,
    textarea,
    a {
      margin: 0;
      padding: 0;
      border: none;
      font-family: "Arial", sans-serif;
    }

    body {
      background-color: #f7f9fc;
      color: #333;
      line-height: 1.6;
    }

    .container {
      max-width: 800px;
      margin: 50px auto;
      padding: 20px 40px;
      border-radius: 8px;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    h1 {
      font-size: 2.5em;
      margin-bottom: 20px;
    }

    h2 {
      font-size: 1.5em;
      margin-bottom: 10px;
    }

    p,
    input,
    textarea {
      margin-bottom: 20px;
    }

    small {
      display: block;
      margin-bottom: 20px;
    }

    input,
    textarea {
      width: 100%;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 1em;
      outline: none;
      transition: border 0.3s;
    }

    input:focus,
    textarea:focus {
      border-color: #007bff;
    }

    a,
    button {
      text-decoration: none;
      background-color: #007bff;
      color: #fff;
      padding: 10px;
      font-size: 1em;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    button.full-width {
      display: block;
      text-align: center;
      width: 100%;
    }

    a,
    button:hover {
      background-color: #0056b3;
    }

    ul {
      list-style-type: none;
    }

    li {
      padding: 20px 0;
      border-bottom: 1px solid #eee;
    }

    li:last-child {
      border-bottom: none;
    }

    a.edit {
      background-color: #007bff;
      /* margin-right: 10px; */
    }

    a.delete {
      background-color: #e74c3c;
    }

    a.delete:hover {
      background-color: #c0392b;
    }

    #newPostBtn {
      margin: 20px 0;
      background-color: #2ecc71;
      padding: 10px 15px;
      font-size: 1em;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.3s;
      border: none;
      color: #fff;
      text-align: center;
      text-decoration: none;
    }

    #submitBtn {
      margin: 20px 0;
      background-color: rgb(43, 0, 255);
      padding: 10px 15px;
      font-size: 1em;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.3s;
      border: none;
      color: #fff;
      text-align: center;
      text-decoration: none;
    }

    #newPostBtn:hover {
      background-color: #27ae60;
    }

    label {
      display: block;
      margin-bottom: 8px;
    }

    body {
    transition: background-color white 0.3s ease;
    font-family: Arial, sans-serif;
}

.dark-mode {
    background-color: #333;
    color: #fff;
}

body {
    margin: 0;
    padding: 0;
}
  </style>
</head>

<body>
  <div class="container">
    <h1>Quiz</h1>
    <div id="countdown" style="float: right; color: #c0392b;"></div>
    <form action="/Student/AddedTeams/Quiz/:id" method="post" id="form">
    <ul id="postsList">
    <button type="submit">Submit</button>
      <% if(locals.posts && Array.isArray(locals.posts)){ %>
        <% locals.posts.forEach(post=> { %>
          <li>
            <h2>
              <%=post.Title%>
            </h2>
            <% if(post.Content!=null){ %>
              <input type="text" id="userAnswer" name="content">
              <% } else if(post.TF!=null){ %>
                <div id="radioOptions">
                  <label for="trueOption">True</label>
                  <input type="radio" id="trueOption" name="tf<%=post.Id%>" value="true">
                  <label for="falseOption">False</label>
                  <input type="radio" id="falseOption" name="tf<%=post.Id%>" value="false">
                </div>
                <% } else if(post.MCQs!=null){ %>
                  <div id="mcqOptions">
                    <label for="trueOption"> Select the correct answer<br></label>
                    <label for="option1">
                      <%=post.MCQ1%>
                    </label>
                    <input type="radio" value="Option1" name="mcq<%=post.Id%>" style="display: inline;">
                    <label for="option2">
                      <%=post.MCQ2%>
                    </label>
                    <input type="radio" value="Option2" name="mcq<%=post.Id%>" style="display: inline;">
                    <label for="option3">
                      <%=post.MCQ3%>
                    </label>
                    <input type="radio" value="Option3" name="mcq<%=post.Id%>" style="display: inline;">
                    <label for="option4">
                      <%=post.MCQ4%>
                    </label>
                    <input type="radio" value="Option4" name="mcq<%=post.Id%>" style="display: inline;">
                  </div>
                  <%}%>
          </li>
          <% });}%>
    </ul>
  </form>
  </div>
 
  <script>

document.addEventListener('DOMContentLoaded', function () {
    const body = document.body;
    const toggleThemeButton = document.getElementById('toggleThemeButton');

    // Check if dark mode preference is stored in local storage
    const isDarkMode = localStorage.getItem('darkMode') === 'true';

    // Set initial theme based on user's preference
    toggleDarkMode(isDarkMode);

    // Add event listener to the theme toggle button
    toggleThemeButton.addEventListener('click', function () {
        // Toggle dark mode and update local storage
        const newMode = !body.classList.contains('dark-mode');
        toggleDarkMode(newMode);
        localStorage.setItem('darkMode', newMode);
    });
});

function toggleDarkMode(isDarkMode) {
    const body = document.body;

    // Toggle CSS class based on the dark mode status
    if (isDarkMode) {
        body.classList.add('dark-mode');
    } else {
        body.classList.remove('dark-mode');
    }
}
    // Check if the quiz has already started by checking if the initial timestamp is stored
    let quizStartTime = localStorage.getItem('quizStartTime');
    let quizDuration;
  
    if (quizStartTime) {
      // Quiz has already started, calculate the remaining time
      const currentTime = Math.floor(Date.now() / 1000);
      const elapsedTime = currentTime - quizStartTime;
      quizDuration = <%=locals.posts[0].TimeMinutes%>*60 + <%=locals.posts[0].TimeHours%>*3600 - elapsedTime;
    } else {
      // Quiz is starting for the first time, set the initial timestamp
      quizStartTime = Math.floor(Date.now() / 1000);
      localStorage.setItem('quizStartTime', quizStartTime);
      quizDuration = <%=locals.posts[0].TimeMinutes%>*60 + <%=locals.posts[0].TimeHours%>*3600;
    }
  
    // Get the countdown element
    const countdownElement = document.getElementById('countdown');
  
    // Start the countdown when the page loads
    startCountdown(quizDuration);
  
    function startCountdown(duration) {
      let timer = duration;
  
      // Update the countdown every second
      const countdownInterval = setInterval(function () {
        const hours = Math.floor(timer / 3600);
        const minutes = Math.floor((timer % 3600) / 60);
        const seconds = timer % 60;
  
        // Display the countdown in hours and minutes
        countdownElement.innerHTML = `${hours}h ${minutes}m ${seconds}s`;
  
        // Check if the countdown has reached zero
        if (--timer < 0) {
          clearInterval(countdownInterval);
          // Handle quiz completion or submission here
          countdownElement.innerHTML = "Time's up!";
          alert("Time's up! Quiz completed.");
  
          // Automatically submit the form
          const quizForm = document.querySelector('form');
          if (quizForm) {
            quizForm.submit();
          } else {
            console.error('Quiz form not found!');
          }
  
          // Optionally, remove the stored quiz start time to reset on the next visit
          localStorage.removeItem('quizStartTime');
        }
      }, 1000);
    }

    </script>
</body>

</html>